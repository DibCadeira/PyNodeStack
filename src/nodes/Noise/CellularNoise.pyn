!width - Number - 25
!height - Number - 25
!scale - Number - 10.0
!num_points - Number - 10

compute
import numpy as np

# Generate grid points
x = np.linspace(0, scale, width, endpoint=False)
y = np.linspace(0, scale, height, endpoint=False)
X, Y = np.meshgrid(x, y)

# Generate random seed points
points = np.random.rand(num_points, 2) * scale

# Calculate distance to nearest and second nearest seed points for each pixel
distances1 = np.zeros((height, width)) + np.inf
distances2 = np.zeros((height, width)) + np.inf

for i in range(num_points):
    dx = X - points[i, 0]
    dy = Y - points[i, 1]
    dist = np.sqrt(dx**2 + dy**2)

    # Update nearest and second nearest distances
    mask = dist < distances1
    distances2[mask] = distances1[mask]
    distances1[mask] = dist[mask]

# Normalize distances to [0, 1]
value = (distances1 - np.min(distances1)) / (np.max(distances1) - np.min(distances1))

push(value)